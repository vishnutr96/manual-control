name: "dev Infra Build"

on:
  workflow_dispatch:

    inputs:

      instance_type:
        type: choice
        description: "instance type"
        options: 
        - t2.micro
        - t2.small
        default: "t2.micro"

      instance_ami:
        type: string
        description: 'instance ami'
        required: true
        default: "ami-079db87dc4c10ac91"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.DEV_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_SECRET_KEY }}
      AWS_REGION: ${{ secrets.DEV_AWS_REGION }}

    steps:
    - name: "Repository Checkout"
      uses: actions/checkout@v3

    - name: "Terraform Installation"
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.6.2

    - name: "Terraform init"
      run: |
        terraform init \
          -backend-config="bucket=${{ secrets.DEV_S3_BUCKET }}" \
          -backend-config="key=terraform.tfstate" \
          -backend-config="region=${{ secrets.S3_REGION }}" \
          -backend-config="access_key=${{ secrets.DEV_ACCESS_KEY }}" \
          -backend-config="secret_key=${{ secrets.DEV_SECRET_KEY }}"

    - name: "Terraform fmt"
      run: terraform fmt

    - name: "Terraform validate"
      run: terraform validate

    - name: "Terraform plan"
      run: |
           terraform plan \
             -var "instance_type=${{ github.event.inputs.instance_type }}" \
             -var "instance_ami=${{ github.event.inputs.instance_ami }}"

    - name: "Terraform apply"
      run: |
           terraform apply -auto-approve \
             -var "instance_type=${{ github.event.inputs.instance_type }}" \
             -var "instance_ami=${{ github.event.inputs.instance_ami }}"
